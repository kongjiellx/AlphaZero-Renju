package(default_visibility = ["//visibility:public"])

cc_library(
    name = "board",
    srcs = [
        "board.cpp",
        "board.h",
    ],
    deps = [
        "//conf:conf_cc_proto",
        "//cpp/src/data_structure",
    ],
)

cc_library(
    name = "model",
    srcs = [
        "model.cpp",
        "model.h",
    ],
    deps = [
        "//conf:conf_cc_proto",
        "//cpp/src/data_structure",
        "@org_tensorflow//tensorflow/cc/saved_model:loader",
    ],
)

cc_library(
    name = "resource_manager",
    srcs = [
        "resource_manager.cpp",
        "resource_manager.h",
    ],
    deps = [
        "//conf:conf_cc_proto",
        "//cpp/src/data_structure",
        "//cpp/src/utils:fixed_deque",
        "//cpp/src/utils:protobuf_utils",
        "@com_github_gflags_gflags//:gflags",
    ],
)

cc_library(
    name = "pit",
    srcs = [
        "pit.cpp",
        "pit.h",
    ],
    deps = [
        ":resource_manager",
        "//cpp/src/strategy:strategy_h",
    ],
)

cc_library(
    name = "model_manager",
    srcs = [
        "model_manager.cpp",
        "model_manager.h",
    ],
    deps = [
        ":model",
        ":resource_manager",
        "//conf:conf_cc_proto",
        "//cpp/src/utils:protobuf_utils",
    ],
)

cc_library(
    name = "producer",
    srcs = [
        "producer.cpp",
        "producer.h",
    ],
    deps = [
        ":pit",
        ":resource_manager",
        "//cpp/src/strategy",
        "//cpp/src/utils:thread",
        "//cpp/src/utils:thread_pool",
    ],
)

cc_library(
    name = "trainer",
    srcs = [
        "trainer.cpp",
        "trainer.h",
    ],
    deps = [
        ":model_manager",
        ":resource_manager",
        "//cpp/src/data_structure",
        "//cpp/src/utils:thread",
    ],
)

cc_library(
    name = "examiner",
    srcs = [
        "examiner.cpp",
        "examiner.h",
    ],
    deps = [
        ":model_manager",
        ":pit",
        "//cpp/src/strategy",
        "//cpp/src/utils:thread",
        "//cpp/src/utils:thread_pool",
    ],
)

cc_library(
    name = "engine",
    srcs = [
        "engine.cpp",
        "engine.h",
    ],
    deps = [
        ":examiner",
        ":producer",
        ":trainer",
    ],
)

cc_binary(
    name = "main",
    srcs = ["main.cpp"],
    deps = [":engine"],
)
