# By default, build TF in C++ 14 mode.  
build --cxxopt=-std=c++14
build --host_cxxopt=-std=c++14

# Processor native optimizations (depends on build host capabilities).
build --copt=-mcpu=apple-m1
build --host_copt=-mcpu=apple-m1

build:deploy --copt=-O3
build:deploy -c opt
build --config deploy

build:debug -c dbg
# build:debug --copt="-g"
# build:debug --spawn_strategy=local
# build:debug --sandbox_debug
# build:debug --apple_enable_auto_dsym_dbg

build --keep_going
build --verbose_failures=true
build --genrule_strategy=standalone

build --define=grpc_no_ares=true

# # Sets the default Apple platform to macOS.
build --apple_platform_type=macos
build --cpu=darwin_arm64

# Adding "--cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0" creates parity with TF
# compilation options. It also addresses memory use due to
# copy-on-write semantics of std::strings of the older ABI.
build --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0

build --experimental_repo_remote_exec

# TF now has `cc_shared_library` targets, so it needs the experimental flag
build --experimental_cc_shared_library

build --output_filter=DONT_MATCH_ANYTHING

build --disk_cache=~/.bazel_remote_cache

# 加了这个配置debug会炸
# build --incompatible_strict_action_env
